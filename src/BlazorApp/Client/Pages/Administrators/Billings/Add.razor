@page "/administrator/billings/add"
@using BlazorApp.Shared.Accounts
@using BlazorApp.Shared.Billing

@inject HttpClient Http
@inject NavigationManager navigationManager

<PageTitle>Add New Billing</PageTitle>
<h3>Add New Billing</h3>


<EditForm OnValidSubmit="OnSubmit" Model="Parameters">

    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-sm-6">
            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Account</label>
                <div class="col">
                    <InputSelect class="form-control" @bind-Value="@Parameters.AccountId">
                        <option value="">- Select Account -</option>
                        @foreach (var opt in Accounts)
                        {
                            <option value="@opt.AccountId">@opt.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Parameters.BillingMonth)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Amount</label>
                <div class="col">
                    <InputNumber type="number" class="form-control" @bind-Value="Parameters.BillingAmount" />
                    <ValidationMessage For="@(() => Parameters.BillingAmount)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Number</label>
                <div class="col">
                    <InputText class="form-control" @bind-Value="Parameters.BillingNumber" />
                    <ValidationMessage For="@(() => Parameters.BillingNumber)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Year</label>
                <div class="col">
                    <InputSelect class="form-control" @bind-Value="@Parameters.BillingYear">
                        <option value="">- Select Year -</option>
                        <option value="2021">2021</option>
                        <option value="2022">2022</option>
                        <option value="2023">2023</option>
                        <option value="2024">2024</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => Parameters.BillingYear)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Month</label>
                <div class="col">
                    <InputSelect class="form-control" @bind-Value="@Parameters.BillingMonth">
                        <option value="">- Select Month -</option>
                        <option value="January">January</option>
                        <option value="February">February</option>
                        <option value="March">March</option>
                        <option value="April">April</option>
                        <option value="May">May</option>
                        <option value="June">June</option>
                        <option value="July">July</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => Parameters.BillingMonth)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Reading Date</label>
                <div class="col">
                    <InputDate class="form-control" @bind-Value="Parameters.ReadingDate" />
                    <ValidationMessage For="@(() => Parameters.ReadingDate)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Billing Start</label>
                <div class="col">
                    <InputDate class="form-control" @bind-Value="Parameters.BillingDateStart" />
                    <ValidationMessage For="@(() => Parameters.BillingDateStart)" />
                </div>
            </div>

        </div>
        <div class="col-sm-6">
            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Billing End</label>
                <div class="col">
                    <InputDate class="form-control" @bind-Value="Parameters.BillingDateEnd" />
                    <ValidationMessage For="@(() => Parameters.BillingDateEnd)" />
                </div>
            </div>


            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Present Reading (kWH)</label>
                <div class="col">
                    <InputNumber class="form-control" @bind-Value="Parameters.PresentReading" />
                    <ValidationMessage For="@(() => Parameters.PresentReading)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Previous Reading (kWH)</label>
                <div class="col">
                    <InputNumber class="form-control" @bind-Value="Parameters.PreviousReading" />
                    <ValidationMessage For="@(() => Parameters.PreviousReading)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Multiplier</label>
                <div class="col">
                    <InputNumber class="form-control" @bind-Value="Parameters.Multiplier" />
                    <ValidationMessage For="@(() => Parameters.Multiplier)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">kWH Used</label>
                <div class="col">
                    <InputNumber class="form-control" @bind-Value="Parameters.KilloWattHourUsed" />
                    <ValidationMessage For="@(() => Parameters.KilloWattHourUsed)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Billing Due Date</label>
                <div class="col">
                    <InputDate class="form-control" @bind-Value="Parameters.BillingDateDue" />
                    <ValidationMessage For="@(() => Parameters.BillingDateDue)" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-lg-4 col-form-label text-lg-end">Reader</label>
                <div class="col">
                    <InputText class="form-control" @bind-Value="Parameters.Reader" />
                    <ValidationMessage For="@(() => Parameters.Reader)" />
                </div>
            </div>

        </div>
    </div>


    <label class="text-danger">@error</label>

    <button class="btn btn-primary" type="submit">Save</button>
    <a href="/administrator/billings" class="btn btn-default">Cancel</a>

</EditForm>

@code {
    string error { get; set; }

    AddBillingInfo Parameters { get; set; } = new AddBillingInfo
        {
            ReadingDate = DateTime.UtcNow,
            BillingDateDue = DateTime.UtcNow,
            BillingDateStart = DateTime.UtcNow,
            BillingDateEnd = DateTime.UtcNow,
        };

    List<AccountLookupInfo> Accounts = new();

    protected override async Task OnInitializedAsync()
    {

        await GetAccounts();
    }

    async Task GetAccounts()
    {
        var dto = await Http.GetFromJsonAsync<List<AccountLookupInfo>>("/api/account/lookup");

        Accounts = dto;

    }
    async Task OnSubmit()
    {
        var result = await Http.PostAsJsonAsync<AddBillingInfo>("/api/billing/add-billing", Parameters);

        if (!result.IsSuccessStatusCode)
        {
            error = await result.Content.ReadAsStringAsync();
        }
    }
}
