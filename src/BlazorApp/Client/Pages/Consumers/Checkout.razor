@page "/consumer/checkout/{billingId}"
@using System.Net.Http.Headers
@using BlazorApp.Shared.Billing
@using BlazorApp.Shared.GCash

@inject HttpClient Http

<h3>Checkout</h3>

@if (ViewBillingInfo == null)
{
    <div>
        Loading
    </div>
}
else
{
    <div>
        <table class="table table-responsive border">

            <tbody>
                <tr>
                    <th>
                        Amount
                    </th>
                    <td>
                        @ViewBillingInfo.Amount.ToString("C")
                    </td>
                </tr>
                <tr>
                    <th>
                        Billing Date From/To
                    </th>
                    <td>
                        @ViewBillingInfo.DateStart to @ViewBillingInfo.DateEnd
                    </td>
                </tr>
                <tr>
                    <th>
                        Due Date
                    </th>
                    <td>
                        @ViewBillingInfo.DateDue
                    </td>
                </tr>
                <tr>
                    <th>
                        Present Reading
                    </th>
                    <td>
                        @ViewBillingInfo.PresentReading
                    </td>
                </tr>
                <tr>
                    <th>
                        Previous Reading
                    </th>
                    <td>
                        @ViewBillingInfo.PreviousReading
                    </td>
                </tr>
                <tr>
                    <th>
                        kWH Used
                    </th>
                    <td>
                        @(ViewBillingInfo.KilloWattHourUsed * @ViewBillingInfo.Multiplier)
                    </td>
                </tr>




                @if (!string.IsNullOrWhiteSpace(ViewBillingInfo.Payment.GcashPaymentId))
                {
                    <tr>
                        <th></th>
                        <td>
                            <a href="@ViewBillingInfo.Resource.CheckoutUrl">View in GCash</a>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Paid Amount
                        </th>
                        <td>
                            @ViewBillingInfo.Payment.Amount.ToString("C")
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Fee
                        </th>
                        <td>
                            - @ViewBillingInfo.Payment.Fee.ToString("C")
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Net Amount
                        </th>
                        <td>
                            @ViewBillingInfo.Payment.NetAmount.ToString("C")
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <th></th>
                        <td>
                            <a href="@ViewBillingInfo.Resource.CheckoutUrl">Pay with GCash via PayMongo</a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>

    </div>
}

@code {

    [Parameter]
    public string BillingId { get; set; }

    ViewBillingInfo ViewBillingInfo { get; set; }

    //BlazorApp.Shared.GCash.SourceResource SourceResourceInfo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetBilling(BillingId);

        if (string.IsNullOrWhiteSpace(ViewBillingInfo.GCashSourceResourceId))
        {

            var source = await CreateSourceResource();

            // update billing resource id
            var dataAttributes = source.Data.Attributes;

            await AddBillingResource(BillingId, source.Data.Id, dataAttributes.Redirect.Checkout_Url, dataAttributes.Amount, dataAttributes.Status);

            //  get updated
            await GetBilling(BillingId);
        }
    }

    async Task GetBilling(string billingId)
    {
        var foo = await Http.GetFromJsonAsync<ViewBillingInfo>($"/api/billing/{billingId}");

        ViewBillingInfo = foo;
    }

    async Task<BlazorApp.Shared.GCash.SourceResource> CreateSourceResource()
    {
        //var client = new HttpClient();
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Post,
                RequestUri = new Uri("https://api.paymongo.com/v1/sources"),
                Headers =
            {
                { "Accept", "application/json" },
                { "Authorization", "Basic cGtfdGVzdF9lbnlCR1VWRUtLRW1qRzRMNVhpazZ4cXk6" },
            },
                Content = new StringContent("{\"data\":{\"attributes\":{\"amount\":" + (ViewBillingInfo.Amount * 100).ToString() + ",\"redirect\":{\"success\":\"https://localhost:7104/gcash/success/" + ViewBillingInfo.BillingId + "\",\"failed\":\"https://localhost:7104/gcash/failed/" + ViewBillingInfo.BillingId + "\"},\"type\":\"gcash\",\"currency\":\"PHP\"}}}")
                {
                    Headers =
                {
                    ContentType = new MediaTypeHeaderValue("application/json")
                }
                }
            };
        using (var response = await Http.SendAsync(request))
        {
            
            var body = await response.Content.ReadAsStringAsync();

            response.EnsureSuccessStatusCode();

            var foo = await response.Content.ReadFromJsonAsync<BlazorApp.Shared.GCash.SourceResource>();

            return foo;
        }
    }

    async Task AddBillingResource(string billingId, string sourceId, string checkoutUrl, double amount, string status)
    {
        var info = new AddBillingSourceInfo
            {
                BillingId = billingId,
                SourceId = sourceId,
                CheckoutUrl = checkoutUrl,
                Amount = amount,
                Status = status

            };

        await Http.PostAsJsonAsync<AddBillingSourceInfo>("/api/billing/add-billing-resource", info);
    }
}
